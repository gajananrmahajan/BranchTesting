To pass the test method's parameter value from the data provider to the @BeforeMethod annotated method in TestNG, you can use TestNG's ITestContext object. Here's how you can achieve it:

java
Copy code
import org.testng.ITestContext;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class TestNGExample {

    @DataProvider(name = "TestData")
    public Object[][] testData() {
        return new Object[][] {
                {"Java"},
                {"Python"},
                {"Perl"}
        };
    }

    @BeforeMethod
    public void beforeTestMethod(ITestContext context) {
        String language = (String) context.getAttribute("language");
        System.out.println("Language in BeforeMethod: " + language);
    }

    @Test(dataProvider = "TestData")
    public void test(String language, ITestContext context) {
        // Set the language as an attribute in TestNG context
        context.setAttribute("language", language);

        System.out.println("Test method with language: " + language);
    }
}
In this example:

In the @BeforeMethod annotated method, we retrieve the language value from the ITestContext object using context.getAttribute("language").
In the @Test annotated method, we pass the ITestContext object as a parameter. This allows us to set the language as an attribute in the TestNG context using context.setAttribute("language", language).
This way, the language value is passed from the test method to the @BeforeMethod annotated method via the TestNG context.
